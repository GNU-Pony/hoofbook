\input texinfo   @c -*-texinfo-*-

@c %**start of header
@setfilename hoofbook.info
@settitle GNU/Pony hoofbook
@afourpaper
@documentencoding UTF-8
@documentlanguage en
@finalout
@c %**end of header

@c define option index and bind it to variable
@c index and bind concept index to program index
@defindex op
@synindex op vr
@synindex cp pg

@c metainfo for info dir
@dircategory General
@direntry
* hoofbook: (hoofbook).               The GNU/Pony hoofbook
@end direntry

@c define copyright notice
@copying
Copyright @copyright{} 2013 Mattias Andrée

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts. A copy of the license is included in the section entitled
``GNU Free Documentation License''.
@end quotation
@end copying

@c define top node and insert copyright notice for info and html version
@ifnottex
@node Top
@top The GNU/Pony hoofbook
@insertcopying
@end ifnottex

@c define title page for tex version
@titlepage
@title The GNU/Pony hoofbook
@c @subtitle
@vskip 0pt plus 1filll
@center @image{logo,200px}
@vskip 0pt plus 1filll
@author by Mattias Andrée (maandree)

@page
@center `Uhm, what are hands?'
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c print table of content in tex and html version
@contents



@menu
* Introduction::
* Conventions::
* Software packages::

* GNU Free Documentation License::
* Concept and program index::
* Variable and option index::
@end menu



@node Introduction
@chapter Introduction

This chapter gives you a short introduction
to what GNU/Pony is.

@menu
* What is GNU/Pony?::
* Who is GNU/Pony for?::
@end menu



@node What is GNU/Pony?
@section What is GNU/Pony?

GNU/Pony is a GNU/Linux distribution that aims
to be extremely customisable and simple. A
GNU/linux distribution is a combination of the
operativing system GNU and the operativing
system kernel Linux with additional tools to
make your life easier.

The GNU Project started in 1983 by Richard
Stallman, also known as rms (from Richard
Matthew Stallman) so that your can have
freedom when you use your computer.



@node Who is GNU/Pony for?
@section Who is GNU/Pony for?

GNU/Pony is for the computer enthusiast that
wants an operativing system tailored to her
own preferences down to that last detail and
does not mind building software from source.

GNU/Pony also includes some option programs
designed for using in terminals with a
specific paradigm: ephemeral, the run during
as short of time as possible. so you have as
few running processes at the same time as
possible.



@node Conventions
@chapter Conventions

This chapter gives you a brief overview of
conventions used in GNU/Linux system and
other Unix-like systems.

@menu
* Filename conventions::
* Process name conventions::
@end menu



@node Filename conventions
@section Filename conventions

Configuration files are often called dotfiles,
specially if user private. This comes from the
fact that they have a `.' at the beginning of
their name the make them hidden.

Many of these are named with `rc', exactly
why is not known, but it could stand for
`run commands' or `run(time) configurations'.

Directories with modular configuration files
are conventionally named with `.d' at the
end for `directory'.



@node Process name conventions
@section Process name conventions

Daemon processes are system processes that
run continuously in the background. These
are named with a `d' as the end.

Programs used for editing of sometimes named
with `ed' in the end for `editor'.



@node Software packages
@chapter Software packages

This chapter introduces the concept of
software packages to new users that do not
come from a GNU/Linux system or similar
system. It also gives an overview how it
this works specifically in GNU/Pony.

@menu
* What are software packages?::
* Package management in GNU/Pony::
@end menu



@node What are software packages?
@section What are software packages?

Software packages is a concept this is
very popular for Free Software operativing
systems and distributions. Software packages
are basically scripts with instructions for
downloading and installing specific programs.
With a program called a package manager,
uninstallation, conflicts, dependencies and
updates can be handled in addition to
installations. Package managers also gives
you a method for find and install programs.
you may be interested in.

Distributions such as GNU/Linux have
collections of packages in what are called
package repositories. These are often
called ports trees if they are downloaded
to the users rather than remotely queried.



@node Package management in GNU/Pony
@section Package management in GNU/Pony

GNU/Pony's package repository is community
operated and consists for five Git branches:

@itemize
@item core: Recommended core packages
@item extra: Recommended packages
@item more: Additional packages
@item limbo: Removed packages
@item spool: Upcoming packages
@end itemize

The packages are then additional grouped
into categories.

The packages for GNU/Pony are called scrolls
or Spike scrolls. These are Python scripts, that
uses a module called `dragonsuite' that provides
common functionality used when installing
programs, that provide metainformation for a
package and where to download the programs
source code and how to build and install it.

Users have the entires package repository
(ports tree) downloaded as a git repository.
This allows you to do local modificatios to
packages without losing the changes you have
made when the ports tree is updated.

The package manager for GNU/Pony is called
Spike, the command is @command{spike}.



@c full license text, this must never be removed
@node GNU Free Documentation License
@appendix GNU Free Documentation License
@include fdl.texinfo

@c BEGIN print indices
@node Concept and program index
@appendix Concept and program index
@printindex pg

@node Variable and option index
@appendix Variable and option index
@printindex vr
@c END print indices

@bye

